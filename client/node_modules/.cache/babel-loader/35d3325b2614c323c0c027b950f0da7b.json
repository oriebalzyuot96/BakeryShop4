{"ast":null,"code":"// import React from \"react\";\n// import axios from \"axios\";\n// import Avatar from \"@material-ui/core/Avatar\";\n// import Button from \"@material-ui/core/Button\";\n// import CssBaseline from \"@material-ui/core/CssBaseline\";\n// import TextField from \"@material-ui/core/TextField\";\n// import FormControlLabel from \"@material-ui/core/FormControlLabel\";\n// import Checkbox from \"@material-ui/core/Checkbox\";\n// import Link from \"@material-ui/core/Link\";\n// import Grid from \"@material-ui/core/Grid\";\n// import Box from \"@material-ui/core/Box\";\n// import LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\n// import Typography from \"@material-ui/core/Typography\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import Container from \"@material-ui/core/Container\";\n// function Copyright() {\n//   return (\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n//       {\"Copyright Â© \"}\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\n//         Your Website\n//       </Link>{\" \"}\n//       {new Date().getFullYear()}\n//       {\".\"}\n//     </Typography>\n//   );\n// }\n// const useStyles = makeStyles((theme) => ({\n//   paper: {\n//     marginTop: theme.spacing(8),\n//     display: \"flex\",\n//     flexDirection: \"column\",\n//     alignItems: \"center\",\n//   },\n//   avatar: {\n//     margin: theme.spacing(1),\n//     background:\"rgba(0, 0, 0, 0.94)\",\n//   },\n//   form: {\n//     width: \"100%\", // Fix IE 11 issue.\n//     marginTop: theme.spacing(3),\n//   },\n//   submit: {\n//     margin: theme.spacing(3, 0, 2),\n//     background:\"rgba(0, 0, 0, 0.79)\",\n//     color:\"white\"\n//   },\n// }));\n// export default function Item() {\n//   const classes = useStyles();\n//   const [values, setValues] = React.useState({\n//    NameOfCategory: \" \",\n//       NameOfItems:\" \" ,\n//       Price: \" \",\n//       description:\" \",\n//       image:\" \",\n//       NumberOfItems:\" \",\n//   });\n//   const handleChange = (prop) => (event) => {\n//     setValues({ ...values, [prop]: event.target.value });\n//   };\n//   const onSubmit = (e) => {\n//     e.preventDefault();\n//     var NameOfCategory = document.getElementById(\"NameOfCategory\").value;\n//     var NameOfItems=document.getElementById(\"NameOfItems\").value\n//     var Price = document.getElementById(\"Price\").value;\n//     var description = document.getElementById(\"description\").value;\n//      var image = document.getElementById(\"image\").value;\n//      var NumberOfItems=document.getElementById(\"NumberOfItems\").value;\n//     //var password = document.getElementById(\"password\").value;\n//     //console.log(password)\n//      console.log(NameOfCategory)\n//       console.log(Price)\n//       console.log(image)\n//     const items = {\n//       NameOfCategory: NameOfCategory,\n//       NameOfItems:NameOfItems,\n//       Price: Price,\n//       description:description,\n//       image:image,\n//       NumberOfItems:NumberOfItems\n//       // email: email,\n//       // password: password,\n//     };\n//     //console.log(user)\n//     axios\n//        .post(\"http://localhost:7000/items\", items)\n//  .then((res) => {\n//     console.log(res.data);\n//     if(res.data === \"item added\"){\n//         alert('item added')\n//       }\n//   }).catch((error) => {\n//        alert(\"try again \")\n//       console.log(error)\n//   });\n//   };\n//   return (\n//     <Container component=\"main\" maxWidth=\"xs\">\n//       <CssBaseline />\n//       <div className={classes.paper}>\n//         <Avatar className={classes.avatar}>\n//           {/* <LockOutlinedIcon /> */}\n//         </Avatar>\n//         <Typography component=\"h1\" variant=\"h5\">\n//          Add Item\n//         </Typography>\n//         <form className={classes.form} onSubmit={onSubmit} noValidate>\n//           <Grid container spacing={2}>\n//             <Grid item xs={12} >\n//               <TextField\n//                 value={values.NameOfCategory}\n//                 onChange={handleChange(\"NameOfCategory\")}\n//                 autoComplete=\"fname\"\n//                 name=\"NameOfCategory\"\n//                 variant=\"outlined\"\n//                 required\n//                 fullWidth\n//                 id=\"NameOfCategory\"\n//                 label=\"NameOfCategory\"\n//                 autoFocus\n//               />\n//             </Grid>\n//             </Grid>\n//             <Grid container spacing={2}>\n//             <Grid item xs={12} >\n//               <TextField\n//                 value={values.NameOfItems}\n//                 onChange={handleChange(\"NameOfItems\")}\n//                 autoComplete=\"fname\"\n//                 name=\"NameOfItems\"\n//                 variant=\"outlined\"\n//                 required\n//                 fullWidth\n//                 id=\"NameOfItems\"\n//                 label=\"NameOfItems\"\n//                 autoFocus\n//               />\n//             </Grid>\n//             </Grid>\n//             <Grid container spacing={2}>\n//             <Grid item xs={12} >\n//               <TextField\n//                 value={values.Price}\n//                 onChange={handleChange(\"Price\")}\n//                 autoComplete=\"fname\"\n//                 name=\"Price\"\n//                 variant=\"outlined\"\n//                 required\n//                 fullWidth\n//                 id=\"Price\"\n//                 label=\"Price\"\n//                 autoFocus\n//               />\n//             </Grid>\n//             </Grid>\n//             <Grid container spacing={2}>\n//             <Grid item xs={12} >\n//               <TextField\n//                 value={values.description}\n//                 onChange={handleChange(\"description\")}\n//                 autoComplete=\"fname\"\n//                 name=\"description\"\n//                 variant=\"outlined\"\n//                 required\n//                 fullWidth\n//                 id=\"description\"\n//                 label=\"description\"\n//                 autoFocus\n//               />\n//             </Grid>\n//             </Grid>\n//              <Grid container spacing={2}>\n//             <Grid item xs={12} >\n//               <TextField\n//                 value={values.image}\n//                 onChange={handleChange(\"image\")}\n//                 autoComplete=\"fname\"\n//                 name=\"image\"\n//                 variant=\"outlined\"\n//                 required\n//                 fullWidth\n//                 id=\"image\"\n//                 label=\"image\"\n//                 autoFocus\n//               />\n//             </Grid>\n//             </Grid>\n//             <Grid container spacing={2}>\n//             <Grid item xs={12} >\n//               <TextField\n//                 value={values.NumberOfItems}\n//                 onChange={handleChange(\"NumberOfItems\")}\n//                 autoComplete=\"fname\"\n//                 name=\"NumberOfItems\"\n//                 variant=\"outlined\"\n//                 required\n//                 fullWidth\n//                 id=\"NumberOfItems\"\n//                 label=\"NumberOfItems\"\n//                 autoFocus\n//               />\n//             </Grid>\n//             </Grid>\n//           <Button\n//             type=\"submit\"\n//             fullWidth\n//             variant=\"contained\"\n//             color=\"primary\" \n//             className={classes.submit}\n//           >\n//           Add Item\n//           </Button>\n//           <Grid container justify=\"flex-end\">\n//             <Grid item>\n//               <Link href=\"delet item\" variant=\"body2\">\n//                Did you need to delet item ?\n//               </Link>\n//             </Grid>\n//             <Grid item>\n//               <p id=\"accoutCreated\"></p>\n//             </Grid>\n//           </Grid>\n//         </form>\n//       </div>\n//       <Box mt={5}>\n//         <Copyright />\n//       </Box>\n//     </Container>\n//   );\n// }","map":{"version":3,"sources":["C:/Users/baker/Desktop/BakeryShop4/client/src/component/admin.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React from \"react\";\r\n// import axios from \"axios\";\r\n// import Avatar from \"@material-ui/core/Avatar\";\r\n// import Button from \"@material-ui/core/Button\";\r\n// import CssBaseline from \"@material-ui/core/CssBaseline\";\r\n// import TextField from \"@material-ui/core/TextField\";\r\n// import FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n// import Checkbox from \"@material-ui/core/Checkbox\";\r\n// import Link from \"@material-ui/core/Link\";\r\n// import Grid from \"@material-ui/core/Grid\";\r\n// import Box from \"@material-ui/core/Box\";\r\n// import LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\n// import Typography from \"@material-ui/core/Typography\";\r\n// import { makeStyles } from \"@material-ui/core/styles\";\r\n// import Container from \"@material-ui/core/Container\";\r\n// function Copyright() {\r\n//   return (\r\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n//       {\"Copyright Â© \"}\r\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n//         Your Website\r\n//       </Link>{\" \"}\r\n//       {new Date().getFullYear()}\r\n//       {\".\"}\r\n//     </Typography>\r\n//   );\r\n// }\r\n// const useStyles = makeStyles((theme) => ({\r\n//   paper: {\r\n//     marginTop: theme.spacing(8),\r\n//     display: \"flex\",\r\n//     flexDirection: \"column\",\r\n//     alignItems: \"center\",\r\n//   },\r\n//   avatar: {\r\n//     margin: theme.spacing(1),\r\n//     background:\"rgba(0, 0, 0, 0.94)\",\r\n//   },\r\n//   form: {\r\n//     width: \"100%\", // Fix IE 11 issue.\r\n//     marginTop: theme.spacing(3),\r\n//   },\r\n//   submit: {\r\n//     margin: theme.spacing(3, 0, 2),\r\n//     background:\"rgba(0, 0, 0, 0.79)\",\r\n//     color:\"white\"\r\n//   },\r\n// }));\r\n// export default function Item() {\r\n//   const classes = useStyles();\r\n//   const [values, setValues] = React.useState({\r\n//    NameOfCategory: \" \",\r\n//       NameOfItems:\" \" ,\r\n//       Price: \" \",\r\n//       description:\" \",\r\n//       image:\" \",\r\n//       NumberOfItems:\" \",\r\n//   });\r\n//   const handleChange = (prop) => (event) => {\r\n//     setValues({ ...values, [prop]: event.target.value });\r\n//   };\r\n//   const onSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     var NameOfCategory = document.getElementById(\"NameOfCategory\").value;\r\n//     var NameOfItems=document.getElementById(\"NameOfItems\").value\r\n//     var Price = document.getElementById(\"Price\").value;\r\n//     var description = document.getElementById(\"description\").value;\r\n//      var image = document.getElementById(\"image\").value;\r\n//      var NumberOfItems=document.getElementById(\"NumberOfItems\").value;\r\n//     //var password = document.getElementById(\"password\").value;\r\n//     //console.log(password)\r\n//      console.log(NameOfCategory)\r\n//       console.log(Price)\r\n//       console.log(image)\r\n//     const items = {\r\n//       NameOfCategory: NameOfCategory,\r\n//       NameOfItems:NameOfItems,\r\n//       Price: Price,\r\n//       description:description,\r\n//       image:image,\r\n//       NumberOfItems:NumberOfItems\r\n//       // email: email,\r\n//       // password: password,\r\n//     };\r\n//     //console.log(user)\r\n//     axios\r\n//        .post(\"http://localhost:7000/items\", items)\r\n//  .then((res) => {\r\n//     console.log(res.data);\r\n//     if(res.data === \"item added\"){\r\n//         alert('item added')\r\n//       }\r\n//   }).catch((error) => {\r\n//        alert(\"try again \")\r\n//       console.log(error)\r\n//   });\r\n//   };\r\n//   return (\r\n//     <Container component=\"main\" maxWidth=\"xs\">\r\n//       <CssBaseline />\r\n//       <div className={classes.paper}>\r\n//         <Avatar className={classes.avatar}>\r\n//           {/* <LockOutlinedIcon /> */}\r\n//         </Avatar>\r\n//         <Typography component=\"h1\" variant=\"h5\">\r\n//          Add Item\r\n//         </Typography>\r\n//         <form className={classes.form} onSubmit={onSubmit} noValidate>\r\n//           <Grid container spacing={2}>\r\n//             <Grid item xs={12} >\r\n//               <TextField\r\n//                 value={values.NameOfCategory}\r\n//                 onChange={handleChange(\"NameOfCategory\")}\r\n//                 autoComplete=\"fname\"\r\n//                 name=\"NameOfCategory\"\r\n//                 variant=\"outlined\"\r\n//                 required\r\n//                 fullWidth\r\n//                 id=\"NameOfCategory\"\r\n//                 label=\"NameOfCategory\"\r\n//                 autoFocus\r\n//               />\r\n//             </Grid>\r\n//             </Grid>\r\n//             <Grid container spacing={2}>\r\n//             <Grid item xs={12} >\r\n//               <TextField\r\n//                 value={values.NameOfItems}\r\n//                 onChange={handleChange(\"NameOfItems\")}\r\n//                 autoComplete=\"fname\"\r\n//                 name=\"NameOfItems\"\r\n//                 variant=\"outlined\"\r\n//                 required\r\n//                 fullWidth\r\n//                 id=\"NameOfItems\"\r\n//                 label=\"NameOfItems\"\r\n//                 autoFocus\r\n//               />\r\n//             </Grid>\r\n//             </Grid>\r\n//             <Grid container spacing={2}>\r\n//             <Grid item xs={12} >\r\n//               <TextField\r\n//                 value={values.Price}\r\n//                 onChange={handleChange(\"Price\")}\r\n//                 autoComplete=\"fname\"\r\n//                 name=\"Price\"\r\n//                 variant=\"outlined\"\r\n//                 required\r\n//                 fullWidth\r\n//                 id=\"Price\"\r\n//                 label=\"Price\"\r\n//                 autoFocus\r\n//               />\r\n//             </Grid>\r\n//             </Grid>\r\n//             <Grid container spacing={2}>\r\n//             <Grid item xs={12} >\r\n//               <TextField\r\n//                 value={values.description}\r\n//                 onChange={handleChange(\"description\")}\r\n//                 autoComplete=\"fname\"\r\n//                 name=\"description\"\r\n//                 variant=\"outlined\"\r\n//                 required\r\n//                 fullWidth\r\n//                 id=\"description\"\r\n//                 label=\"description\"\r\n//                 autoFocus\r\n//               />\r\n//             </Grid>\r\n//             </Grid>\r\n//              <Grid container spacing={2}>\r\n//             <Grid item xs={12} >\r\n//               <TextField\r\n//                 value={values.image}\r\n//                 onChange={handleChange(\"image\")}\r\n//                 autoComplete=\"fname\"\r\n//                 name=\"image\"\r\n//                 variant=\"outlined\"\r\n//                 required\r\n//                 fullWidth\r\n//                 id=\"image\"\r\n//                 label=\"image\"\r\n//                 autoFocus\r\n//               />\r\n//             </Grid>\r\n//             </Grid>\r\n\r\n\r\n\r\n//             <Grid container spacing={2}>\r\n//             <Grid item xs={12} >\r\n//               <TextField\r\n//                 value={values.NumberOfItems}\r\n//                 onChange={handleChange(\"NumberOfItems\")}\r\n//                 autoComplete=\"fname\"\r\n//                 name=\"NumberOfItems\"\r\n//                 variant=\"outlined\"\r\n//                 required\r\n//                 fullWidth\r\n//                 id=\"NumberOfItems\"\r\n//                 label=\"NumberOfItems\"\r\n//                 autoFocus\r\n//               />\r\n//             </Grid>\r\n//             </Grid>\r\n\r\n\r\n            \r\n//           <Button\r\n//             type=\"submit\"\r\n//             fullWidth\r\n//             variant=\"contained\"\r\n//             color=\"primary\" \r\n//             className={classes.submit}\r\n//           >\r\n//           Add Item\r\n//           </Button>\r\n//           <Grid container justify=\"flex-end\">\r\n//             <Grid item>\r\n//               <Link href=\"delet item\" variant=\"body2\">\r\n//                Did you need to delet item ?\r\n//               </Link>\r\n//             </Grid>\r\n//             <Grid item>\r\n//               <p id=\"accoutCreated\"></p>\r\n//             </Grid>\r\n//           </Grid>\r\n//         </form>\r\n//       </div>\r\n//       <Box mt={5}>\r\n//         <Copyright />\r\n//       </Box>\r\n//     </Container>\r\n//   );\r\n// }\r\n\r\n"]},"metadata":{},"sourceType":"module"}