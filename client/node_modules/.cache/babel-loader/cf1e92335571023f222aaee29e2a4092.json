{"ast":null,"code":"// export const ADD_PRODUCT = 'ADD_PRODUCT'\n// export const REMOVE_PRODUCT = 'REMOVE_PRODUCT'\n// export const FETCH_INIT = 'FETCH_INIT'\n// export const FETCH_SUCCESS = 'FETCH_SUCCESS'\n// export const FETCH_FAILURE = 'FETCH_FAILURE'\n// const addProductToCart = (product, state) => {\n//   const updatedCart = [...state.cart]\n//   const updatedItemIndex = updatedCart.findIndex(item => item._id === product._id)\n//   if (updatedItemIndex < 0) {\n//     updatedCart.push({ ...product, quantity: 1 })\n//   } else {\n//     const updatedItem = {\n//       ...updatedCart[updatedItemIndex],\n//     }\n//     updatedItem.quantity++\n//     updatedCart[updatedItemIndex] = updatedItem\n//   }\n//   return { ...state, cart: updatedCart }\n// }\n// const removeProductFromCart = (productId, state) => {\n//   console.log('Removing product with id: ' + productId)\n//   const updatedCart = [...state.cart]\n//   const updatedItemIndex = updatedCart.findIndex(item => item._id === productId)\n//   const updatedItem = {\n//     ...updatedCart[updatedItemIndex],\n//   }\n//   updatedItem.quantity--\n//   if (updatedItem.quantity <= 0) {\n//     updatedCart.splice(updatedItemIndex, 1)\n//   } else {\n//     updatedCart[updatedItemIndex] = updatedItem\n//   }\n//   return { ...state, cart: updatedCart }\n// }\n// const fetchProducts = (products, state) => {\n//   return { ...state, products }\n// }\n// export const shopReducer = (state, action) => {\n//   switch (action.type) {\n//     case FETCH_INIT:\n//       return {\n//         ...state,\n//         isLoading: true,\n//         isError: false,\n//       }\n//     case FETCH_SUCCESS:\n//       // return {\n//       //   ...state,\n//       //   isLoading: false,\n//       //   isError: false,\n//       //   products: action.payload,\n//       //   fetchProducts\n//       // }\n//       return fetchProducts(action.products, state)\n//     case FETCH_FAILURE:\n//       return {\n//         ...state,\n//         isLoading: false,\n//         isError: true,\n//       }\n//     case ADD_PRODUCT:\n//       return addProductToCart(action.product, state)\n//     case REMOVE_PRODUCT:\n//       return removeProductFromCart(action.productId, state)\n//     default:\n//       return state\n//   }\n// }","map":{"version":3,"sources":["C:/Users/baker/Desktop/BakeryShop4/client/src/context/reducers.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// export const ADD_PRODUCT = 'ADD_PRODUCT'\n// export const REMOVE_PRODUCT = 'REMOVE_PRODUCT'\n// export const FETCH_INIT = 'FETCH_INIT'\n// export const FETCH_SUCCESS = 'FETCH_SUCCESS'\n// export const FETCH_FAILURE = 'FETCH_FAILURE'\n\n// const addProductToCart = (product, state) => {\n//   const updatedCart = [...state.cart]\n//   const updatedItemIndex = updatedCart.findIndex(item => item._id === product._id)\n\n//   if (updatedItemIndex < 0) {\n//     updatedCart.push({ ...product, quantity: 1 })\n//   } else {\n//     const updatedItem = {\n//       ...updatedCart[updatedItemIndex],\n//     }\n//     updatedItem.quantity++\n//     updatedCart[updatedItemIndex] = updatedItem\n//   }\n//   return { ...state, cart: updatedCart }\n// }\n\n// const removeProductFromCart = (productId, state) => {\n//   console.log('Removing product with id: ' + productId)\n//   const updatedCart = [...state.cart]\n//   const updatedItemIndex = updatedCart.findIndex(item => item._id === productId)\n\n//   const updatedItem = {\n//     ...updatedCart[updatedItemIndex],\n//   }\n//   updatedItem.quantity--\n//   if (updatedItem.quantity <= 0) {\n//     updatedCart.splice(updatedItemIndex, 1)\n//   } else {\n//     updatedCart[updatedItemIndex] = updatedItem\n//   }\n//   return { ...state, cart: updatedCart }\n// }\n\n// const fetchProducts = (products, state) => {\n//   return { ...state, products }\n// }\n\n// export const shopReducer = (state, action) => {\n//   switch (action.type) {\n//     case FETCH_INIT:\n//       return {\n//         ...state,\n//         isLoading: true,\n//         isError: false,\n//       }\n//     case FETCH_SUCCESS:\n//       // return {\n//       //   ...state,\n//       //   isLoading: false,\n//       //   isError: false,\n//       //   products: action.payload,\n//       //   fetchProducts\n//       // }\n//       return fetchProducts(action.products, state)\n//     case FETCH_FAILURE:\n//       return {\n//         ...state,\n//         isLoading: false,\n//         isError: true,\n//       }\n//     case ADD_PRODUCT:\n//       return addProductToCart(action.product, state)\n//     case REMOVE_PRODUCT:\n//       return removeProductFromCart(action.productId, state)\n//     default:\n//       return state\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}