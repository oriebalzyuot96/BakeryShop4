{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar helpers_1 = require(\"./helpers\");\n\nvar PLAYER_STATUS_PLAY = 'PLAYER_STATUS_PLAY';\nexports.PLAYER_STATUS_PLAY = PLAYER_STATUS_PLAY;\nvar PLAYER_STATUS_PAUSE = 'PLAYER_STATUS_PAUSE';\nexports.PLAYER_STATUS_PAUSE = PLAYER_STATUS_PAUSE;\nvar PLAYER_VOLUME_STATUS_UNMUTE = 'PLAYER_VOLUME_STATUS_UNMUTE';\nexports.PLAYER_VOLUME_STATUS_UNMUTE = PLAYER_VOLUME_STATUS_UNMUTE;\nvar PLAYER_VOLUME_STATUS_MUTE = 'PLAYER_VOLUME_STATUS_MUTE';\nexports.PLAYER_VOLUME_STATUS_MUTE = PLAYER_VOLUME_STATUS_MUTE;\nvar PLAYER_VOLUME_CHANGE = 'PLAYER_VOLUME_CHANGE';\nexports.PLAYER_VOLUME_CHANGE = PLAYER_VOLUME_CHANGE;\nvar PLAYER_SET_DURATION = 'PLAYER_SET_DURATION';\nexports.PLAYER_SET_DURATION = PLAYER_SET_DURATION;\nvar PLAYER_SET_TIME = 'PLAYER_SET_TIME';\nexports.PLAYER_SET_TIME = PLAYER_SET_TIME;\nvar PLAYER_SLIDER_MOVED = 'PLAYER_SLIDER_MOVED';\nexports.PLAYER_SLIDER_MOVED = PLAYER_SLIDER_MOVED;\nvar PLAYER_AUDIO_ENDED = 'PLAYER_AUDIO_ENDED';\nexports.PLAYER_AUDIO_ENDED = PLAYER_AUDIO_ENDED;\nvar PLAYER_REPLAY = 'PLAYER_REPLAY';\nexports.PLAYER_REPLAY = PLAYER_REPLAY;\nvar PLAYER_AUTOPLAY = 'PLAYER_AUTOPLAY';\nexports.PLAYER_AUTOPLAY = PLAYER_AUTOPLAY;\nvar PLAYER_LOOP = 'PLAYER_LOOP';\nexports.PLAYER_LOOP = PLAYER_LOOP;\n\nfunction playAudio(dispatch, player) {\n  return function () {\n    if (player.current) {\n      player.current.play();\n    }\n\n    return dispatch({\n      type: PLAYER_STATUS_PLAY\n    });\n  };\n}\n\nfunction pauseAudio(dispatch, player) {\n  return function () {\n    if (player.current) {\n      player.current.pause();\n    }\n\n    dispatch({\n      type: PLAYER_STATUS_PAUSE\n    });\n  };\n}\n\nfunction muteAudio(dispatch, player) {\n  return function () {\n    if (player.current) {\n      player.current.muted = true;\n    }\n\n    dispatch({\n      type: PLAYER_VOLUME_STATUS_MUTE\n    });\n  };\n}\n\nfunction unmuteAudio(dispatch, player) {\n  return function () {\n    if (player.current) {\n      player.current.muted = false;\n    }\n\n    dispatch({\n      type: PLAYER_VOLUME_STATUS_UNMUTE\n    });\n  };\n}\n\nfunction changeAudioVolume(dispatch, player) {\n  return function (value) {\n    if (player.current) {\n      player.current.volume = value > 0 ? value / 100 : 0;\n\n      if (player.current.muted) {\n        player.current.muted = false;\n      }\n    }\n\n    dispatch({\n      type: PLAYER_VOLUME_CHANGE,\n      volumeValue: value\n    });\n  };\n}\n\nfunction setPlayerDuration(dispatch, player) {\n  return function () {\n    dispatch({\n      type: PLAYER_SET_DURATION,\n      duration: player.current.duration\n    });\n  };\n}\n\nfunction setPlayerTime(dispatch, player) {\n  return function () {\n    dispatch({\n      type: PLAYER_SET_TIME,\n      current: player.current.currentTime,\n      progress: helpers_1.getProgress(player.current.currentTime, player.current.duration)\n    });\n  };\n}\n\nfunction changePlayerSlider(dispatch, player) {\n  return function (progress) {\n    var currentTime = helpers_1.getCurrentTime(progress, player.current.duration);\n\n    if (!isNaN(currentTime)) {\n      player.current.currentTime = currentTime;\n    }\n\n    dispatch({\n      type: PLAYER_SLIDER_MOVED,\n      progress: progress,\n      current: currentTime\n    });\n  };\n}\n\nfunction audioEnded(dispatch) {\n  return function () {\n    dispatch({\n      type: PLAYER_AUDIO_ENDED\n    });\n  };\n}\n\nfunction replayAudio(dispatch, player) {\n  return function () {\n    if (player.current) {\n      player.current.play();\n    }\n\n    dispatch({\n      type: PLAYER_REPLAY\n    });\n  };\n}\n\nfunction loopAudio(dispatch, player) {\n  return function (loop) {\n    if (player.current) {\n      player.current.loop = loop;\n    }\n\n    dispatch({\n      type: PLAYER_LOOP,\n      loop: loop\n    });\n  };\n}\n\nfunction setPlayerAutoplay(dispatch, player) {\n  return function () {\n    if (player.current) {\n      player.current.autoplay = true;\n    }\n\n    setTimeout(function () {\n      if (player.current.currentTime) {\n        dispatch({\n          type: PLAYER_AUTOPLAY\n        });\n      }\n    }, 300);\n  };\n}\n\nvar actionCreators = [playAudio, pauseAudio, muteAudio, unmuteAudio, changeAudioVolume, setPlayerDuration, setPlayerTime, audioEnded, replayAudio, changePlayerSlider, setPlayerAutoplay, loopAudio];\nexports.actionCreators = actionCreators;","map":{"version":3,"sources":["../../../src/components/state/actions.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = require(\"./helpers\");\nvar PLAYER_STATUS_PLAY = 'PLAYER_STATUS_PLAY';\nexports.PLAYER_STATUS_PLAY = PLAYER_STATUS_PLAY;\nvar PLAYER_STATUS_PAUSE = 'PLAYER_STATUS_PAUSE';\nexports.PLAYER_STATUS_PAUSE = PLAYER_STATUS_PAUSE;\nvar PLAYER_VOLUME_STATUS_UNMUTE = 'PLAYER_VOLUME_STATUS_UNMUTE';\nexports.PLAYER_VOLUME_STATUS_UNMUTE = PLAYER_VOLUME_STATUS_UNMUTE;\nvar PLAYER_VOLUME_STATUS_MUTE = 'PLAYER_VOLUME_STATUS_MUTE';\nexports.PLAYER_VOLUME_STATUS_MUTE = PLAYER_VOLUME_STATUS_MUTE;\nvar PLAYER_VOLUME_CHANGE = 'PLAYER_VOLUME_CHANGE';\nexports.PLAYER_VOLUME_CHANGE = PLAYER_VOLUME_CHANGE;\nvar PLAYER_SET_DURATION = 'PLAYER_SET_DURATION';\nexports.PLAYER_SET_DURATION = PLAYER_SET_DURATION;\nvar PLAYER_SET_TIME = 'PLAYER_SET_TIME';\nexports.PLAYER_SET_TIME = PLAYER_SET_TIME;\nvar PLAYER_SLIDER_MOVED = 'PLAYER_SLIDER_MOVED';\nexports.PLAYER_SLIDER_MOVED = PLAYER_SLIDER_MOVED;\nvar PLAYER_AUDIO_ENDED = 'PLAYER_AUDIO_ENDED';\nexports.PLAYER_AUDIO_ENDED = PLAYER_AUDIO_ENDED;\nvar PLAYER_REPLAY = 'PLAYER_REPLAY';\nexports.PLAYER_REPLAY = PLAYER_REPLAY;\nvar PLAYER_AUTOPLAY = 'PLAYER_AUTOPLAY';\nexports.PLAYER_AUTOPLAY = PLAYER_AUTOPLAY;\nvar PLAYER_LOOP = 'PLAYER_LOOP';\nexports.PLAYER_LOOP = PLAYER_LOOP;\nfunction playAudio(dispatch, player) {\n    return function () {\n        if (player.current) {\n            player.current.play();\n        }\n        return dispatch({ type: PLAYER_STATUS_PLAY });\n    };\n}\nfunction pauseAudio(dispatch, player) {\n    return function () {\n        if (player.current) {\n            player.current.pause();\n        }\n        dispatch({ type: PLAYER_STATUS_PAUSE });\n    };\n}\nfunction muteAudio(dispatch, player) {\n    return function () {\n        if (player.current) {\n            player.current.muted = true;\n        }\n        dispatch({ type: PLAYER_VOLUME_STATUS_MUTE });\n    };\n}\nfunction unmuteAudio(dispatch, player) {\n    return function () {\n        if (player.current) {\n            player.current.muted = false;\n        }\n        dispatch({ type: PLAYER_VOLUME_STATUS_UNMUTE });\n    };\n}\nfunction changeAudioVolume(dispatch, player) {\n    return function (value) {\n        if (player.current) {\n            player.current.volume = value > 0 ? value / 100 : 0;\n            if (player.current.muted) {\n                player.current.muted = false;\n            }\n        }\n        dispatch({ type: PLAYER_VOLUME_CHANGE, volumeValue: value });\n    };\n}\nfunction setPlayerDuration(dispatch, player) {\n    return function () {\n        dispatch({ type: PLAYER_SET_DURATION, duration: player.current.duration });\n    };\n}\nfunction setPlayerTime(dispatch, player) {\n    return function () {\n        dispatch({\n            type: PLAYER_SET_TIME,\n            current: player.current.currentTime,\n            progress: helpers_1.getProgress(player.current.currentTime, player.current.duration),\n        });\n    };\n}\nfunction changePlayerSlider(dispatch, player) {\n    return function (progress) {\n        var currentTime = helpers_1.getCurrentTime(progress, player.current.duration);\n        if (!isNaN(currentTime)) {\n            player.current.currentTime = currentTime;\n        }\n        dispatch({ type: PLAYER_SLIDER_MOVED, progress: progress, current: currentTime });\n    };\n}\nfunction audioEnded(dispatch) {\n    return function () {\n        dispatch({ type: PLAYER_AUDIO_ENDED });\n    };\n}\nfunction replayAudio(dispatch, player) {\n    return function () {\n        if (player.current) {\n            player.current.play();\n        }\n        dispatch({ type: PLAYER_REPLAY });\n    };\n}\nfunction loopAudio(dispatch, player) {\n    return function (loop) {\n        if (player.current) {\n            player.current.loop = loop;\n        }\n        dispatch({ type: PLAYER_LOOP, loop: loop });\n    };\n}\nfunction setPlayerAutoplay(dispatch, player) {\n    return function () {\n        if (player.current) {\n            player.current.autoplay = true;\n        }\n        setTimeout(function () {\n            if (player.current.currentTime) {\n                dispatch({ type: PLAYER_AUTOPLAY });\n            }\n        }, 300);\n    };\n}\nvar actionCreators = [\n    playAudio,\n    pauseAudio,\n    muteAudio,\n    unmuteAudio,\n    changeAudioVolume,\n    setPlayerDuration,\n    setPlayerTime,\n    audioEnded,\n    replayAudio,\n    changePlayerSlider,\n    setPlayerAutoplay,\n    loopAudio,\n];\nexports.actionCreators = actionCreators;\n//# sourceMappingURL=actions.js.map"]},"metadata":{},"sourceType":"script"}