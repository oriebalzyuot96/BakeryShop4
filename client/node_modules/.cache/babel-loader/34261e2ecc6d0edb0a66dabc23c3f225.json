{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\baker\\\\Desktop\\\\BakeryShop4\\\\client\\\\src\\\\component\\\\location.js\";\nimport React from 'react';\nimport { fade, ThemeProvider, withStyles, makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport InputBase from '@material-ui/core/InputBase';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport { green } from '@material-ui/core/colors';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nconst CssTextField = withStyles({\n  root: {\n    '& label.Mui-focused': {\n      color: 'green'\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: 'green'\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: 'red'\n      },\n      '&:hover fieldset': {\n        borderColor: 'yellow'\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: 'green'\n      }\n    }\n  }\n})(TextField);\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3)\n    }\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.common.white,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    width: 'auto',\n    padding: '10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"', 'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n    '&:focus': {\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\n      borderColor: theme.palette.primary.main\n    }\n  }\n}))(InputBase);\nconst useStylesReddit = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  root: {\n    border: '1px solid #e2e2e1',\n    overflow: 'hidden',\n    borderRadius: 4,\n    backgroundColor: '#fcfcfb',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    '&:hover': {\n      backgroundColor: '#fff'\n    },\n    '&$focused': {\n      backgroundColor: '#fff',\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\n      borderColor: theme.palette.primary.main\n    }\n  },\n  focused: {}\n}));\n\nfunction RedditTextField(props) {\n  const classes = useStylesReddit();\n  return /*#__PURE__*/React.createElement(TextField, Object.assign({\n    InputProps: {\n      classes,\n      disableUnderline: true\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 10\n    }\n  }));\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\nconst ValidationTextField = withStyles({\n  root: {\n    '& input:valid + fieldset': {\n      borderColor: 'green',\n      borderWidth: 2\n    },\n    '& input:invalid + fieldset': {\n      borderColor: 'red',\n      borderWidth: 2\n    },\n    '& input:valid:focus + fieldset': {\n      borderLeftWidth: 6,\n      padding: '4px !important' // override inline-style\n\n    }\n  }\n})(TextField);\nconst theme = createMuiTheme({\n  palette: {\n    primary: green\n  }\n});\nexport default function CustomizedInputs() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    age: '',\n    name: 'hai'\n  });\n\n  const handleChange = event => {\n    const name = event.target.name;\n    setState({ ...state,\n      [name]: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(NativeSelect, {\n    value: this.setState,\n    onChange: handleChange,\n    inputProps: {\n      name: 'age',\n      id: 'city'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    value: Amman,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, \"Amman\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, \"Twenty\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 30,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, \"Thirty\")), /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, \"Some important helper text\")), /*#__PURE__*/React.createElement(CssTextField, {\n    className: classes.margin,\n    id: \"custom-css-standard-input\",\n    label: \"Custom CSS\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CssTextField, {\n    className: classes.margin,\n    label: \"Custom CSS\",\n    variant: \"outlined\",\n    id: \"custom-css-outlined-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: classes.margin,\n    label: \"ThemeProvider\",\n    id: \"mui-theme-provider-standard-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    className: classes.margin,\n    label: \"ThemeProvider\",\n    variant: \"outlined\",\n    id: \"mui-theme-provider-outlined-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(ValidationTextField, {\n    className: classes.margin,\n    label: \"CSS validation style\",\n    required: true,\n    variant: \"outlined\",\n    defaultValue: \"Success\",\n    id: \"validation-outlined-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ValidationTextField, {\n    className: classes.margin,\n    label: \"CSS validation style\",\n    required: true,\n    variant: \"outlined\",\n    defaultValue: \"Success\",\n    id: \"validation-outlined-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/baker/Desktop/BakeryShop4/client/src/component/location.js"],"names":["React","fade","ThemeProvider","withStyles","makeStyles","createMuiTheme","InputBase","InputLabel","TextField","FormControl","green","FormHelperText","Select","NativeSelect","CssTextField","root","color","borderBottomColor","borderColor","BootstrapInput","theme","marginTop","spacing","input","borderRadius","position","backgroundColor","palette","common","white","border","fontSize","width","padding","transition","transitions","create","fontFamily","join","boxShadow","primary","main","useStylesReddit","formControl","margin","minWidth","selectEmpty","overflow","focused","RedditTextField","props","classes","disableUnderline","useStyles","display","flexWrap","ValidationTextField","borderWidth","borderLeftWidth","CustomizedInputs","state","setState","useState","age","name","handleChange","event","target","value","id","Amman"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  fade,\r\n  ThemeProvider,\r\n  withStyles,\r\n  makeStyles,\r\n  createMuiTheme,\r\n} from '@material-ui/core/styles';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { green } from '@material-ui/core/colors';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\n\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    '& label.Mui-focused': {\r\n      color: 'green',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: 'green',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n      '& fieldset': {\r\n        borderColor: 'red',\r\n      },\r\n      '&:hover fieldset': {\r\n        borderColor: 'yellow',\r\n      },\r\n      '&.Mui-focused fieldset': {\r\n        borderColor: 'green',\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    'label + &': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.common.white,\r\n    border: '1px solid #ced4da',\r\n    fontSize: 16,\r\n    width: 'auto',\r\n    padding: '10px 12px',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:focus': {\r\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst useStylesReddit = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n      },\r\n      selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n  root: {\r\n    border: '1px solid #e2e2e1',\r\n    overflow: 'hidden',\r\n    borderRadius: 4,\r\n    backgroundColor: '#fcfcfb',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    '&:hover': {\r\n      backgroundColor: '#fff',\r\n    },\r\n    '&$focused': {\r\n      backgroundColor: '#fff',\r\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n  focused: {},\r\n}));\r\n\r\n\r\nfunction RedditTextField(props) {\r\n  const classes = useStylesReddit();\r\n\r\n  return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst ValidationTextField = withStyles({\r\n  root: {\r\n    '& input:valid + fieldset': {\r\n      borderColor: 'green',\r\n      borderWidth: 2,\r\n    },\r\n    '& input:invalid + fieldset': {\r\n      borderColor: 'red',\r\n      borderWidth: 2,\r\n    },\r\n    '& input:valid:focus + fieldset': {\r\n      borderLeftWidth: 6,\r\n      padding: '4px !important', // override inline-style\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n  },\r\n});\r\n\r\nexport default function CustomizedInputs() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    age: '',\r\n    name: 'hai',\r\n  });\r\n  const handleChange = (event) => {\r\n    const name = event.target.name;\r\n    setState({\r\n      ...state,\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n\r\n\r\n    <form className={classes.root} noValidate>\r\n        <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"city\">City</InputLabel>\r\n        <NativeSelect\r\n          value={this.setState}\r\n          onChange={handleChange}\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'city',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option value={Amman}>Amman</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n        <FormHelperText>Some important helper text</FormHelperText>\r\n      </FormControl>\r\n      <CssTextField className={classes.margin} id=\"custom-css-standard-input\" label=\"Custom CSS\" />\r\n      <CssTextField\r\n        className={classes.margin}\r\n        label=\"Custom CSS\"\r\n        variant=\"outlined\"\r\n        id=\"custom-css-outlined-input\"\r\n      />\r\n      <ThemeProvider theme={theme}>\r\n        <TextField\r\n          className={classes.margin}\r\n          label=\"ThemeProvider\"\r\n          id=\"mui-theme-provider-standard-input\"\r\n        />\r\n        <TextField\r\n          className={classes.margin}\r\n          label=\"ThemeProvider\"\r\n          variant=\"outlined\"\r\n          id=\"mui-theme-provider-outlined-input\"\r\n        />\r\n      </ThemeProvider>\r\n     \r\n     \r\n      <ValidationTextField\r\n        className={classes.margin}\r\n        label=\"CSS validation style\"\r\n        required\r\n        variant=\"outlined\"\r\n        defaultValue=\"Success\"\r\n        id=\"validation-outlined-input\"\r\n      />\r\n  \r\n    \r\n      <ValidationTextField\r\n        className={classes.margin}\r\n        label=\"CSS validation style\"\r\n        required\r\n        variant=\"outlined\"\r\n        defaultValue=\"Success\"\r\n        id=\"validation-outlined-input\"\r\n      />\r\n    </form>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}