{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\baker\\\\Desktop\\\\BakeryShop4\\\\client\\\\src\\\\component\\\\Category.js\";\n// import React from 'react'\n// import { useParams } from 'react-router-dom'\n// import Container from '@material-ui/core/Container'\n// import Card from '@material-ui/core/Card'\n// import CardHeader from '@material-ui/core/CardHeader'\n// import CardMedia from '@material-ui/core/CardMedia'\n// import CardContent from '@material-ui/core/CardContent'\n// import CardActions from '@material-ui/core/CardActions'\n// import Avatar from '@material-ui/core/Avatar'\n// import Typography from '@material-ui/core/Typography'\n// import ButtonGroup from '@material-ui/core/ButtonGroup'\n// import Button from '@material-ui/core/Button'\n// import Badge from '@material-ui/core/Badge'\n// import { makeStyles, withStyles } from '@material-ui/core/styles'\n// import { red } from '@material-ui/core/colors'\n// import { validURL } from '../helpers'\n// import ShopContext from '../context/shop-context'\n// const StyledBadge = withStyles(theme => ({\n//   badge: {\n//     right: -3,\n//     top: 13,\n//     border: `2px solid ${theme.palette.background.paper}`,\n//     padding: '0 4px',\n//   },\n// }))(Badge)\n// const useStyles = makeStyles(theme => ({\n//   body: {\n//     display: 'grid',\n//     gridTemplateColumns: '1fr 1fr',\n//     gridGap: theme.spacing(2),\n//     [theme.breakpoints.up('md')]: {\n//       gridTemplateColumns: '1fr 1fr 1fr 1fr',\n//     },\n//     '$jagged &': {\n//       '& > *:nth-child(even)': {\n//         paddingTop: theme.spacing(6),\n//       },\n//     },\n//   },\n//   header: {\n//     textAlign: 'center',\n//   },\n//   heading: {\n//     textTransform: 'uppercase',\n//   },\n//   avatar: {\n//     backgroundColor: red[500],\n//   },\n//   media: {\n//     height: 0,\n//     paddingTop: '56.25%', // 16:9\n//   },\n// }))\n// export default function Category() {\n//   const classes = useStyles()\n//   let { category } = useParams() // Object\n//   const context = React.useContext(ShopContext)\n//   console.log('context', context)\n//   React.useEffect(() => {\n//     async function fetchData() {\n//       // You can await here\n//       const token = localStorage.getItem('loggedInToken')\n//       await context.fetchProducts(token, category)\n//     }\n//     fetchData()\n//   }, [category])\n//   return (\n//     <section>\n//       <Container className={classes.header} component=\"header\" maxWidth=\"md\">\n//         <Typography className={classes.heading} component=\"h2\" variant=\"h4\" gutterBottom>\n//           {category}\n//         </Typography>\n//       </Container>\n//       <Container className={classes.body}>\n//         {context.products.length > 0 ? (\n//           context.products.map((item, idx) => {\n//             const imagePlaceholder =\n//               'https://dynamic.brandcrowd.com/preview/logodraft/1ed57d70-5be9-4d98-9c5d-df3d94923cd3/image/large.png'\n//             // Check if Image is a valid URL\n//             const itemImage = validURL(item.image) ? item.image : imagePlaceholder\n//             return (\n//               <Card key={idx}>\n//                 <CardHeader\n//                   avatar={\n//                     <Avatar\n//                       aria-label=\"recipe\"\n//                       src=\"https://dynamic.brandcrowd.com/preview/logodraft/1ed57d70-5be9-4d98-9c5d-df3d94923cd3/image/large.png\"\n//                       className={classes.avatar}\n//                     />\n//                   }\n//                   title={item.name}\n//                 />\n//                 <CardMedia className={classes.media} image={itemImage} />\n//                 <CardContent>\n//                   <Typography component=\"p\">{item.description}</Typography>\n//                   <Typography>{`${item.price} jd`}</Typography>\n//                 </CardContent>\n//                 <CardActions disableSpacing>\n//                   <div>\n//                     <ButtonGroup>\n//                       <Button\n//                         onClick={context.addProductToCart.bind(this, item)}\n//                         aria-label=\"Add to Cart\"\n//                       >\n//                         Add to Cart\n//                       </Button>\n//                     </ButtonGroup>\n//                   </div>\n//                 </CardActions>\n//               </Card>\n//             )\n//           })\n//         ) : (\n//           <p>No products were found ☹️</p>\n//         )}\n//       </Container>\n//     </section>\n//   )\n// }\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\nimport Badge from '@material-ui/core/Badge';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { red } from '@material-ui/core/colors';\nimport { validURL } from '../helpers';\nimport ShopContext from '../context/shop-context';\nconst StyledBadge = withStyles(theme => ({\n  badge: {\n    right: -3,\n    top: 13,\n    border: `2px solid ${theme.palette.background.paper}`,\n    padding: '0 4px'\n  }\n}))(Badge);\nconst useStyles = makeStyles(theme => ({\n  body: {\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n    gridGap: theme.spacing(2),\n    [theme.breakpoints.up('md')]: {\n      gridTemplateColumns: '1fr 1fr 1fr 1fr'\n    },\n    '$jagged &': {\n      '& > *:nth-child(even)': {\n        paddingTop: theme.spacing(6)\n      }\n    }\n  },\n  header: {\n    textAlign: 'center'\n  },\n  heading: {\n    textTransform: 'uppercase'\n  },\n  avatar: {\n    backgroundColor: red[500]\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%' // 16:9\n\n  }\n}));\nexport default function Category() {\n  const classes = useStyles();\n  let {\n    category\n  } = useParams(); // Object\n\n  const token = localStorage.getItem('loggedInToken');\n  const context = React.useContext(ShopContext);\n  const {\n    products\n  } = context.useDataApi(token, category);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    className: classes.header,\n    component: \"header\",\n    maxWidth: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.heading,\n    component: \"h2\",\n    variant: \"h4\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, category)), /*#__PURE__*/React.createElement(Container, {\n    className: classes.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  }, products.length > 0 ? products.map((item, idx) => {\n    const imagePlaceholder = 'https://dynamic.brandcrowd.com/preview/logodraft/1ed57d70-5be9-4d98-9c5d-df3d94923cd3/image/large.png'; // Check if Image is a valid URL\n\n    const itemImage = validURL(item.image) ? item.image : imagePlaceholder;\n    return /*#__PURE__*/React.createElement(Card, {\n      key: idx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      avatar: /*#__PURE__*/React.createElement(Avatar, {\n        \"aria-label\": \"recipe\",\n        src: \"https://dynamic.brandcrowd.com/preview/logodraft/1ed57d70-5be9-4d98-9c5d-df3d94923cd3/image/large.png\",\n        className: classes.avatar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }\n      }),\n      title: item.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(CardMedia, {\n      className: classes.media,\n      image: itemImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 19\n      }\n    }, item.description), /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 19\n      }\n    }, `${item.price} jd`)), /*#__PURE__*/React.createElement(CardActions, {\n      disableSpacing: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ButtonGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: context.addProductToCart.bind(this, item),\n      \"aria-label\": \"Add to Cart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 23\n      }\n    }, \"Add to Cart\")))));\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }, \"No products were found :white_frowning_face:\")));\n}","map":{"version":3,"sources":["C:/Users/baker/Desktop/BakeryShop4/client/src/component/Category.js"],"names":["React","useParams","Container","Card","CardHeader","CardMedia","CardContent","CardActions","Avatar","Typography","ButtonGroup","Button","Badge","makeStyles","withStyles","red","validURL","ShopContext","StyledBadge","theme","badge","right","top","border","palette","background","paper","padding","useStyles","body","display","gridTemplateColumns","gridGap","spacing","breakpoints","up","paddingTop","header","textAlign","heading","textTransform","avatar","backgroundColor","media","height","Category","classes","category","token","localStorage","getItem","context","useContext","products","useDataApi","length","map","item","idx","imagePlaceholder","itemImage","image","name","description","price","addProductToCart","bind"],"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","sourcesContent":["// import React from 'react'\n// import { useParams } from 'react-router-dom'\n// import Container from '@material-ui/core/Container'\n// import Card from '@material-ui/core/Card'\n// import CardHeader from '@material-ui/core/CardHeader'\n// import CardMedia from '@material-ui/core/CardMedia'\n// import CardContent from '@material-ui/core/CardContent'\n// import CardActions from '@material-ui/core/CardActions'\n// import Avatar from '@material-ui/core/Avatar'\n// import Typography from '@material-ui/core/Typography'\n// import ButtonGroup from '@material-ui/core/ButtonGroup'\n// import Button from '@material-ui/core/Button'\n// import Badge from '@material-ui/core/Badge'\n\n// import { makeStyles, withStyles } from '@material-ui/core/styles'\n// import { red } from '@material-ui/core/colors'\n\n// import { validURL } from '../helpers'\n// import ShopContext from '../context/shop-context'\n\n// const StyledBadge = withStyles(theme => ({\n//   badge: {\n//     right: -3,\n//     top: 13,\n//     border: `2px solid ${theme.palette.background.paper}`,\n//     padding: '0 4px',\n//   },\n// }))(Badge)\n\n// const useStyles = makeStyles(theme => ({\n//   body: {\n//     display: 'grid',\n//     gridTemplateColumns: '1fr 1fr',\n//     gridGap: theme.spacing(2),\n//     [theme.breakpoints.up('md')]: {\n//       gridTemplateColumns: '1fr 1fr 1fr 1fr',\n//     },\n//     '$jagged &': {\n//       '& > *:nth-child(even)': {\n//         paddingTop: theme.spacing(6),\n//       },\n//     },\n//   },\n//   header: {\n//     textAlign: 'center',\n//   },\n//   heading: {\n//     textTransform: 'uppercase',\n//   },\n//   avatar: {\n//     backgroundColor: red[500],\n//   },\n//   media: {\n//     height: 0,\n//     paddingTop: '56.25%', // 16:9\n//   },\n// }))\n\n// export default function Category() {\n//   const classes = useStyles()\n\n//   let { category } = useParams() // Object\n\n//   const context = React.useContext(ShopContext)\n//   console.log('context', context)\n//   React.useEffect(() => {\n//     async function fetchData() {\n//       // You can await here\n//       const token = localStorage.getItem('loggedInToken')\n//       await context.fetchProducts(token, category)\n//     }\n//     fetchData()\n//   }, [category])\n\n//   return (\n//     <section>\n//       <Container className={classes.header} component=\"header\" maxWidth=\"md\">\n//         <Typography className={classes.heading} component=\"h2\" variant=\"h4\" gutterBottom>\n//           {category}\n//         </Typography>\n//       </Container>\n//       <Container className={classes.body}>\n//         {context.products.length > 0 ? (\n//           context.products.map((item, idx) => {\n//             const imagePlaceholder =\n//               'https://dynamic.brandcrowd.com/preview/logodraft/1ed57d70-5be9-4d98-9c5d-df3d94923cd3/image/large.png'\n\n//             // Check if Image is a valid URL\n//             const itemImage = validURL(item.image) ? item.image : imagePlaceholder\n\n//             return (\n//               <Card key={idx}>\n//                 <CardHeader\n//                   avatar={\n//                     <Avatar\n//                       aria-label=\"recipe\"\n//                       src=\"https://dynamic.brandcrowd.com/preview/logodraft/1ed57d70-5be9-4d98-9c5d-df3d94923cd3/image/large.png\"\n//                       className={classes.avatar}\n//                     />\n//                   }\n//                   title={item.name}\n//                 />\n//                 <CardMedia className={classes.media} image={itemImage} />\n//                 <CardContent>\n//                   <Typography component=\"p\">{item.description}</Typography>\n//                   <Typography>{`${item.price} jd`}</Typography>\n//                 </CardContent>\n//                 <CardActions disableSpacing>\n//                   <div>\n//                     <ButtonGroup>\n//                       <Button\n//                         onClick={context.addProductToCart.bind(this, item)}\n//                         aria-label=\"Add to Cart\"\n//                       >\n//                         Add to Cart\n//                       </Button>\n//                     </ButtonGroup>\n//                   </div>\n//                 </CardActions>\n//               </Card>\n//             )\n//           })\n//         ) : (\n//           <p>No products were found ☹️</p>\n//         )}\n//       </Container>\n//     </section>\n//   )\n// }\nimport React from 'react'\nimport { useParams } from 'react-router-dom'\nimport Container from '@material-ui/core/Container'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\nimport Button from '@material-ui/core/Button'\nimport Badge from '@material-ui/core/Badge'\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\nimport { red } from '@material-ui/core/colors'\nimport { validURL } from '../helpers'\nimport ShopContext from '../context/shop-context'\nconst StyledBadge = withStyles(theme => ({\n  badge: {\n    right: -3,\n    top: 13,\n    border: `2px solid ${theme.palette.background.paper}`,\n    padding: '0 4px',\n  },\n}))(Badge)\nconst useStyles = makeStyles(theme => ({\n  body: {\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n    gridGap: theme.spacing(2),\n    [theme.breakpoints.up('md')]: {\n      gridTemplateColumns: '1fr 1fr 1fr 1fr',\n    },\n    '$jagged &': {\n      '& > *:nth-child(even)': {\n        paddingTop: theme.spacing(6),\n      },\n    },\n  },\n  header: {\n    textAlign: 'center',\n  },\n  heading: {\n    textTransform: 'uppercase',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n}))\nexport default function Category() {\n  const classes = useStyles()\n  let { category } = useParams() // Object\n  const token = localStorage.getItem('loggedInToken')\n  const context = React.useContext(ShopContext)\n  const { products } = context.useDataApi(token, category)\n  return (\n    <section>\n      <Container className={classes.header} component=\"header\" maxWidth=\"md\">\n        <Typography className={classes.heading} component=\"h2\" variant=\"h4\" gutterBottom>\n          {category}\n        </Typography>\n      </Container>\n      <Container className={classes.body}>\n        {products.length > 0 ? (\n          products.map((item, idx) => {\n            const imagePlaceholder =\n              'https://dynamic.brandcrowd.com/preview/logodraft/1ed57d70-5be9-4d98-9c5d-df3d94923cd3/image/large.png'\n            // Check if Image is a valid URL\n            const itemImage = validURL(item.image) ? item.image : imagePlaceholder\n            return (\n              <Card key={idx}>\n                <CardHeader\n                  avatar={\n                    <Avatar\n                      aria-label=\"recipe\"\n                      src=\"https://dynamic.brandcrowd.com/preview/logodraft/1ed57d70-5be9-4d98-9c5d-df3d94923cd3/image/large.png\"\n                      className={classes.avatar}\n                    />\n                  }\n                  title={item.name}\n                />\n                <CardMedia className={classes.media} image={itemImage} />\n                <CardContent>\n                  <Typography component=\"p\">{item.description}</Typography>\n                  <Typography>{`${item.price} jd`}</Typography>\n                </CardContent>\n                <CardActions disableSpacing>\n                  <div>\n                    <ButtonGroup>\n                      <Button\n                        onClick={context.addProductToCart.bind(this, item)}\n                        aria-label=\"Add to Cart\"\n                      >\n                        Add to Cart\n                      </Button>\n                    </ButtonGroup>\n                  </div>\n                </CardActions>\n              </Card>\n            )\n          })\n        ) : (\n          <p>No products were found :white_frowning_face:</p>\n        )}\n      </Container>\n    </section>\n  )\n}"]},"metadata":{},"sourceType":"module"}