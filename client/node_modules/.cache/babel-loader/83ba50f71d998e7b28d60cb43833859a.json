{"ast":null,"code":"// import React from 'react'\n// import { useParams } from 'react-router-dom'\n// import Container from '@material-ui/core/Container'\n// import Card from '@material-ui/core/Card'\n// import CardHeader from '@material-ui/core/CardHeader'\n// import CardMedia from '@material-ui/core/CardMedia'\n// import CardContent from '@material-ui/core/CardContent'\n// import CardActions from '@material-ui/core/CardActions'\n// import Avatar from '@material-ui/core/Avatar'\n// import Typography from '@material-ui/core/Typography'\n// import ButtonGroup from '@material-ui/core/ButtonGroup'\n// import Button from '@material-ui/core/Button'\n// import Badge from '@material-ui/core/Badge'\n// import { makeStyles, withStyles } from '@material-ui/core/styles'\n// import { red } from '@material-ui/core/colors'\n// import { validURL } from '../helpers'\n// import ShopContext from '../context/shop-context'\n// const StyledBadge = withStyles(theme => ({\n//   badge: {\n//     right: -3,\n//     top: 13,\n//     border: `2px solid ${theme.palette.background.paper}`,\n//     padding: '0 4px',\n//   },\n// }))(Badge)\n// const useStyles = makeStyles(theme => ({\n//   body: {\n//     display: 'grid',\n//     gridTemplateColumns: '1fr 1fr',\n//     gridGap: theme.spacing(2),\n//     [theme.breakpoints.up('md')]: {\n//       gridTemplateColumns: '1fr 1fr 1fr 1fr',\n//     },\n//     '$jagged &': {\n//       '& > *:nth-child(even)': {\n//         paddingTop: theme.spacing(6),\n//       },\n//     },\n//   },\n//   header: {\n//     textAlign: 'center',\n//   },\n//   heading: {\n//     textTransform: 'uppercase',\n//   },\n//   avatar: {\n//     backgroundColor: red[500],\n//   },\n//   media: {\n//     height: 0,\n//     paddingTop: '56.25%', // 16:9\n//   },\n// }))\n// export default function Category() {\n//   const classes = useStyles()\n//   let { category } = useParams() // Object\n//   const context = React.useContext(ShopContext)\n//   console.log('context', context)\n//   React.useEffect(() => {\n//     async function fetchData() {\n//       // You can await here\n//       const token = localStorage.getItem('loggedInToken')\n//       await context.fetchProducts(token, category)\n//     }\n//     fetchData()\n//   }, [category])\n//   return (\n//     <section>\n//       <Container className={classes.header} component=\"header\" maxWidth=\"md\">\n//         <Typography className={classes.heading} component=\"h2\" variant=\"h4\" gutterBottom>\n//           {category}\n//         </Typography>\n//       </Container>\n//       <Container className={classes.body}>\n//         {context.products.length > 0 ? (\n//           context.products.map((item, idx) => {\n//             const imagePlaceholder =\n//               'https://dynamic.brandcrowd.com/preview/logodraft/1ed57d70-5be9-4d98-9c5d-df3d94923cd3/image/large.png'\n//             // Check if Image is a valid URL\n//             const itemImage = validURL(item.image) ? item.image : imagePlaceholder\n//             return (\n//               <Card key={idx}>\n//                 <CardHeader\n//                   avatar={\n//                     <Avatar\n//                       aria-label=\"recipe\"\n//                       src=\"https://dynamic.brandcrowd.com/preview/logodraft/1ed57d70-5be9-4d98-9c5d-df3d94923cd3/image/large.png\"\n//                       className={classes.avatar}\n//                     />\n//                   }\n//                   title={item.name}\n//                 />\n//                 <CardMedia className={classes.media} image={itemImage} />\n//                 <CardContent>\n//                   <Typography component=\"p\">{item.description}</Typography>\n//                   <Typography>{`${item.price} jd`}</Typography>\n//                 </CardContent>\n//                 <CardActions disableSpacing>\n//                   <div>\n//                     <ButtonGroup>\n//                       <Button\n//                         onClick={context.addProductToCart.bind(this, item)}\n//                         aria-label=\"Add to Cart\"\n//                       >\n//                         Add to Cart\n//                       </Button>\n//                     </ButtonGroup>\n//                   </div>\n//                 </CardActions>\n//               </Card>\n//             )\n//           })\n//         ) : (\n//           <p>No products were found ☹️</p>\n//         )}\n//       </Container>\n//     </section>\n//   )\n// }","map":{"version":3,"sources":["C:/Users/baker/Desktop/BakeryShop4/client/src/component/Category.js"],"names":[],"mappingssourcesContent":["// import React from 'react'\n// import { useParams } from 'react-router-dom'\n// import Container from '@material-ui/core/Container'\n// import Card from '@material-ui/core/Card'\n// import CardHeader from '@material-ui/core/CardHeader'\n// import CardMedia from '@material-ui/core/CardMedia'\n// import CardContent from '@material-ui/core/CardContent'\n// import CardActions from '@material-ui/core/CardActions'\n// import Avatar from '@material-ui/core/Avatar'\n// import Typography from '@material-ui/core/Typography'\n// import ButtonGroup from '@material-ui/core/ButtonGroup'\n// import Button from '@material-ui/core/Button'\n// import Badge from '@material-ui/core/Badge'\n\n// import { makeStyles, withStyles } from '@material-ui/core/styles'\n// import { red } from '@material-ui/core/colors'\n\n// import { validURL } from '../helpers'\n// import ShopContext from '../context/shop-context'\n\n// const StyledBadge = withStyles(theme => ({\n//   badge: {\n//     right: -3,\n//     top: 13,\n//     border: `2px solid ${theme.palette.background.paper}`,\n//     padding: '0 4px',\n//   },\n// }))(Badge)\n\n// const useStyles = makeStyles(theme => ({\n//   body: {\n//     display: 'grid',\n//     gridTemplateColumns: '1fr 1fr',\n//     gridGap: theme.spacing(2),\n//     [theme.breakpoints.up('md')]: {\n//       gridTemplateColumns: '1fr 1fr 1fr 1fr',\n//     },\n//     '$jagged &': {\n//       '& > *:nth-child(even)': {\n//         paddingTop: theme.spacing(6),\n//       },\n//     },\n//   },\n//   header: {\n//     textAlign: 'center',\n//   },\n//   heading: {\n//     textTransform: 'uppercase',\n//   },\n//   avatar: {\n//     backgroundColor: red[500],\n//   },\n//   media: {\n//     height: 0,\n//     paddingTop: '56.25%', // 16:9\n//   },\n// }))\n\n// export default function Category() {\n//   const classes = useStyles()\n\n//   let { category } = useParams() // Object\n\n//   const context = React.useContext(ShopContext)\n//   console.log('context', context)\n//   React.useEffect(() => {\n//     async function fetchData() {\n//       // You can await here\n//       const token = localStorage.getItem('loggedInToken')\n//       await context.fetchProducts(token, category)\n//     }\n//     fetchData()\n//   }, [category])\n\n//   return (\n//     <section>\n//       <Container className={classes.header} component=\"header\" maxWidth=\"md\">\n//         <Typography className={classes.heading} component=\"h2\" variant=\"h4\" gutterBottom>\n//           {category}\n//         </Typography>\n//       </Container>\n//       <Container className={classes.body}>\n//         {context.products.length > 0 ? (\n//           context.products.map((item, idx) => {\n//             const imagePlaceholder =\n//               'https://dynamic.brandcrowd.com/preview/logodraft/1ed57d70-5be9-4d98-9c5d-df3d94923cd3/image/large.png'\n\n//             // Check if Image is a valid URL\n//             const itemImage = validURL(item.image) ? item.image : imagePlaceholder\n\n//             return (\n//               <Card key={idx}>\n//                 <CardHeader\n//                   avatar={\n//                     <Avatar\n//                       aria-label=\"recipe\"\n//                       src=\"https://dynamic.brandcrowd.com/preview/logodraft/1ed57d70-5be9-4d98-9c5d-df3d94923cd3/image/large.png\"\n//                       className={classes.avatar}\n//                     />\n//                   }\n//                   title={item.name}\n//                 />\n//                 <CardMedia className={classes.media} image={itemImage} />\n//                 <CardContent>\n//                   <Typography component=\"p\">{item.description}</Typography>\n//                   <Typography>{`${item.price} jd`}</Typography>\n//                 </CardContent>\n//                 <CardActions disableSpacing>\n//                   <div>\n//                     <ButtonGroup>\n//                       <Button\n//                         onClick={context.addProductToCart.bind(this, item)}\n//                         aria-label=\"Add to Cart\"\n//                       >\n//                         Add to Cart\n//                       </Button>\n//                     </ButtonGroup>\n//                   </div>\n//                 </CardActions>\n//               </Card>\n//             )\n//           })\n//         ) : (\n//           <p>No products were found ☹️</p>\n//         )}\n//       </Container>\n//     </section>\n//   )\n// }\n"]},"metadata":{},"sourceType":"module"}